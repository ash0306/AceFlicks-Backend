using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace MovieBookingBackend.Migrations
{
    public partial class UpdatedDeleteBehaviour : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 143, 122, 242, 120, 4, 95, 187, 200, 119, 47, 233, 31, 217, 151, 108, 255, 31, 23, 107, 228, 136, 154, 152, 31, 193, 79, 195, 132, 252, 152, 100, 182, 99, 179, 111, 101, 207, 1, 166, 105, 96, 6, 223, 91, 156, 75, 82, 14, 175, 235, 80, 133, 113, 83, 193, 177, 110, 181, 167, 109, 174, 249, 237, 2 }, new byte[] { 56, 135, 25, 100, 104, 17, 163, 201, 27, 104, 252, 226, 250, 197, 205, 95, 96, 245, 118, 27, 233, 114, 110, 221, 40, 12, 121, 86, 139, 81, 75, 3, 231, 235, 68, 232, 155, 225, 21, 231, 169, 242, 149, 46, 229, 235, 92, 117, 57, 174, 247, 71, 194, 238, 184, 199, 84, 142, 218, 177, 184, 112, 190, 73, 210, 95, 16, 45, 110, 60, 224, 35, 30, 142, 235, 23, 65, 6, 119, 59, 12, 17, 117, 97, 176, 194, 53, 246, 255, 172, 87, 138, 200, 109, 186, 117, 217, 40, 138, 95, 176, 130, 156, 16, 114, 71, 40, 59, 234, 239, 192, 33, 80, 34, 182, 85, 36, 71, 18, 198, 245, 112, 197, 156, 46, 240, 170, 230 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 208, 65, 187, 185, 125, 52, 187, 203, 245, 49, 170, 87, 78, 143, 50, 222, 89, 165, 64, 174, 99, 103, 66, 91, 17, 94, 101, 222, 94, 187, 244, 196, 136, 59, 81, 34, 134, 29, 145, 206, 11, 70, 110, 79, 52, 62, 145, 162, 166, 15, 40, 203, 216, 92, 17, 47, 47, 82, 173, 29, 228, 211, 188, 225 }, new byte[] { 202, 105, 107, 23, 164, 99, 160, 3, 185, 48, 199, 210, 56, 81, 73, 203, 91, 23, 189, 147, 43, 91, 87, 198, 246, 132, 116, 25, 254, 196, 200, 238, 148, 223, 112, 94, 244, 108, 184, 177, 188, 245, 99, 240, 222, 69, 16, 234, 14, 120, 163, 243, 9, 59, 26, 76, 166, 180, 98, 109, 2, 42, 115, 100, 127, 154, 233, 36, 222, 71, 10, 206, 180, 92, 133, 214, 169, 1, 72, 15, 176, 65, 28, 221, 131, 232, 81, 8, 135, 19, 220, 165, 90, 125, 73, 19, 1, 244, 99, 76, 242, 138, 199, 92, 157, 181, 102, 60, 62, 176, 72, 178, 91, 210, 27, 181, 207, 88, 16, 156, 150, 74, 97, 136, 228, 209, 130, 224 } });
        }
    }
}
